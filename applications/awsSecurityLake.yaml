---
apiVersion: application.ingext.io/v1
kind: AppConfig
metadata:
  name: AWSSecurityLake
spec:
  icon: "https://fluency-public.s3.us-east-1.amazonaws.com/icons/aws-s3.png"
  category: "aws"
  description: "AWS SecurityLake event import"
  displayName: "AWS SecurityLake"  
  parameters:
    - name: Region
      description: "AWS Region"
      dataType: string
      defaultValue: ""
      enums:
        - label: "US N.Virginia" 
          value: us-east-1
        - label: "US Ohio"
          value: us-east-2
        - label: "US N.California"
          value: us-west-1
        - label: "US Oregon"
          value: us-west-2
        - label: "Canada Central"
          value: ca-central-1
        - label: "Africa Cape Town"
          value: af-south-1
        - label: "Europe Frankfurt"
          value: eu-central-1
        - label: "Europe Ireland"
          value: eu-west-1
        - label: "Europe London"
          value: eu-west-2
        - label: "Europe Paris"
          value: eu-west-3
        - label: "Europe Stockholm"
          value: eu-north-1
    - name: SQS_URL
      description: "SQS notification queue url"
      dataType: string
      defaultValue: ""
    - name: IAM_Role_ARN
      description: "IAM Role ARN"
      dataType: string
    - name: EXTERNAL_ID
      description: "External ID"
      dataType: string      
---
apiVersion: application.ingext.io/v1
kind: Router
metadata:
  name: "{{ .Application }}-{{ .AppInstance }}"
spec:
  threadCount: 1
---
apiVersion: application.ingext.io/v1
kind: Pipe
metadata:
  name: "{{ .Application }}-{{ .AppInstance }}"
spec:
  name: main
  processors:
    - Plugin-Passthrough
  sinks: 
    - "{{ .Application }}-{{ .AppInstance }}"
  router: "{{ .Application }}-{{ .AppInstance }}"
  priority: 1000 
---
apiVersion: application.ingext.io/v1
kind: Processor
metadata:
  name: Plugin-Passthrough
spec:
  type: parser
  local: Plugin_Passthrough
---
apiVersion: application.ingext.io/v1
kind: DataSource
metadata:
  name: "{{ .Application }}-{{ .AppInstance }}"
spec:
  type: s3Notification
  format: json
  router: "{{ .Application }}-{{ .AppInstance }}"
  config:
    s3Notification:
      integration: "{{ .Application }}-{{ .AppInstance }}"
---
apiVersion: application.ingext.io/v1
kind: AWSRole
metadata:
  name: "{{ .Application }}-{{ .AppInstance }}"
spec:
  iamRoleARN: "{{ .UserInput.IAM_Role_ARN }}"
  externalID: "{{ .UserInput.EXTERNAL_ID }}"
---
apiVersion: application.ingext.io/v1
kind: Integration
metadata:
  name: "{{ .Application }}-{{ .AppInstance }}"
spec:
  type: S3Notification
  config:
    S3Notification:
      queueURL: "{{ .UserInput.SQS_URL }}"
      region: "{{ .UserInput.Region }}"
      role: "{{ .Application }}-{{ .AppInstance }}"
---
apiVersion: application.ingext.io/v1
kind: DataSink
metadata:
  name: "{{ .Application }}-{{ .AppInstance }}"
spec:
  type: redis
  config:
    redis:
      queue: "queue:LVDBService:FileQueue"
